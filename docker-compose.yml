version: "3.9"
services:
  redis:
    image: bitnami/redis
    environment:
      redis_uri: ${REDIS_URI}
      REDIS_PASSWORD: password123
    volumes:
      - redis:/bitnami/redis/data
  postgres:
    # container_name: postgres_db
    # hostname: db
    image: debezium/postgres:12
    # healthcheck:
    #   test: "pg_isready -U postgresuser -d ${DB_NAME}"
    #   interval: 2s
    #   timeout: 20s
    #   retries: 10
    volumes:
      - ./scripts:/docker-entrypoint-initdb.d
      - pgdata:/var/lib/postgresql/data
    restart: on-failure:2
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USERNAME: ${DB_USERNAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PORT: ${DB_PORT}
      POSTGRES_HOST: ${DB_HOST}
      POSTGRES_NAME: ${DB_NAME}
      # POSTGRES_DB: ${DB_NAME}
    ports:
      - 5432:5432
  web:
    depends_on:
      - postgres
      - redis
    ports:
      - ${APP_PORT}:${APP_PORT}
    links:
      - postgres
      - redis
    environment:
      bot__app__state_code: ${STATE_CODE}
      bot__app__base_url: ${BASE_URL}
      bot__app__response_type: ${RESPONSE_TYPE}
      bot__app__app_address: ${APP_ADDRESS}
      bot__app__app_env: ${APP_env}
      bot__app__api_key: ${API_KEY}
      bot__app__api_key_secret: ${API_KEY_SECRET}
      bot__app__bearer_token: ${BEARER_TOKEN}
      bot__app__callback_url: ${CALLBACK_URL}
      bot__app__client_url: ${CLIENT_URL}
      bot__app__client_secret: ${CLIENT_SECRET}
      bot__app__request_url: ${REQUEST_URL}
      bot__app__access_token: ${ACCESS_TOKEN}
      bot__app__access_token_secret: ${ACCESS_TOKEN_SECRET}
      bot__db__pasword: ${DB_PASSWORD}
      bot__db__username`: ${DB_USERNAME}
      bot__db__port: ${DB_PORT}
      bot__db__host: ${DB_HOST}
      bot__db__database_name: ${DB_NAME}
      bot__redis_uri: ${REDIS_URI}
volumes:
  pgdata:
  static_volume:
  redis: